{
    "level_gen_program": "%%% Game played on an 8x6 grid\nsetting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(row(1..H)) :- setting(grid_height(H)).\nsetting(col(1..W)) :- setting(grid_width(W)).\n\n%%% Time bound: 15 steps\nsetting(time_bound(15)).\n\n%%% Player is randomly placed in the top half\nat(RANDINT(1,3),RANDINT(1,8),player).\n%%% Flag is randomly placed in the bottom half\nat(RANDINT(4,6),RANDINT(1,8),flag).\n\ndecorate(game_type,grid).\ndecorate(label,flag,f).\ndecorate(label,player,p).",
    "player_plan_program": "plan(landmark(H-1,W-1)) :- observe(at(R,C,player)), C >= 5,\n    setting(grid_height(H)), setting(grid_width(W)).\nplan(landmark(H-1,2)) :- observe(at(R,C,player)), C <= 4,\n    setting(grid_height(H)).",
    "player_move_program": "do(move(down)) :- observe(at(R1,C1,player)), memory(at(R2,C2,flag)), R1 < R2.\ndo(move(up)) :- observe(at(R1,C1,player)), memory(at(R2,C2,flag)), R1 > R2.\ndo(move(right)) :- observe(at(R,C1,player)), memory(at(R,C2,flag)), C1 < C2.\ndo(move(left)) :- observe(at(R,C1,player)), memory(at(R,C2,flag)), C1 > C2.\n\ndo(move(down)) :- not memory(at(_,_,flag)), not memory(reached_landmark),\n    observe(at(R,C,player)), setting(grid_height(H)), R < H-1.\ndo(move(left)) :- not memory(at(_,_,flag)), not memory(reached_landmark),\n    plan(landmark(H-1,C1)), observe(at(H-1,C2,player)),\n    setting(grid_height(H)), C2 > C1.\ndo(move(right)) :- not memory(at(_,_,flag)), not memory(reached_landmark),\n    plan(landmark(H-1,C1)), observe(at(H-1,C2,player)),\n    setting(grid_height(H)), C2 < C1.\nremember(reached_landmark) :- observe(at(R,C,player)), plan(landmark(R,C)).\ndo(move(right)) :- not memory(at(R,C,flag)) : setting(row(R)), setting(col(C)); memory(reached_landmark),\n    plan(landmark(R1,C1)), C1 <= 4.\ndo(move(left)) :- not memory(at(R,C,flag)) : setting(row(R)), setting(col(C)); memory(reached_landmark),\n    plan(landmark(R1,C1)), C1 >= 5.\n\nremember(at(R,C,flag)) :- observe(at(R,C,flag)).",
    "visibility_program": "%%% 'Fog-of-war' is a ring of one around the player\nobserve(fog(R1,C1)) :-\n    setting(row(R1)), setting(col(C1)),\n    at(R2,C2,player), |C1-C2| >= 2.\nobserve(fog(R1,C1)) :-\n    setting(row(R1)), setting(col(C1)),\n    at(R2,C2,player), |R1-R2| >= 2.\nobserve(at(R,C,O)) :- at(R,C,O), not observe(fog(R,C)).",
    "nature_program": "%%% Player can do at most one action per time step\n:- do(X), do(Y), X != Y.\n\n%%% Move around\nnext(R,C,player) :- at(R,C,player), not do(move(_)).\nnext(R+1,C,player) :- at(R,C,player), do(move(down)), R < H, setting(grid_height(H)).\nnext(R,C,player) :- at(R,C,player), do(move(down)), setting(grid_height(R)).\nnext(R-1,C,player) :- at(R,C,player), do(move(up)), R > 1.\nnext(1,C,player) :- at(1,C,player), do(move(up)).\nnext(R,C+1,player) :- at(R,C,player), do(move(right)), C < W, setting(grid_width(W)).\nnext(R,C,player) :- at(R,C,player), do(move(right)), setting(grid_width(C)).\nnext(R,C-1,player) :- at(R,C,player), do(move(left)), C > 1.\nnext(R,1,player) :- at(R,1,player), do(move(left)).\n\n%%% Flag stays in place\nnext(R,C,flag) :- at(R,C,flag).",
    "goal_program": "%%% Goal: reach the flag\nwin :- at(R,C,player), at(R,C,flag).\n%%% You lose if time runs out..\nlose(timeout) :- current_time(T), setting(time_bound(S)), T > S.",
    "level_settings": "setting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(time_bound(15)).\nsetting(col(1)).\nsetting(col(2)).\nsetting(col(3)).\nsetting(col(4)).\nsetting(col(5)).\nsetting(col(6)).\nsetting(col(7)).\nsetting(col(8)).\nsetting(row(1)).\nsetting(row(2)).\nsetting(row(3)).\nsetting(row(4)).\nsetting(row(5)).\nsetting(row(6)).\ndecorate(game_type,grid).\ndecorate(label,flag,f).\ndecorate(label,player,p).",
    "level_state": "at(1,6,player).\nat(5,1,flag)."
}
